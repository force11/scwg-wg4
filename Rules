#!/usr/bin/env ruby

require 'date'

preprocess do
  @items.find_all('/meetings/*/audio_0.ogg').each do |recording|
    generate_meeting_index_for(recording)
  end
end

ignore '/meetings/*/*.json'
ignore '/meetings/*/notes'

compile '/meetings/*/agenda.md' do
  layout '/working_agenda.md'
  filter :erb
  filter :pandoc, from: :"markdown+autolink_bare_uris", to: :html5
  layout '/default.html'
  write ext: 'html'
end

compile '/meetings/*/agenda.md', rep: :mail do
  filter :erb
  filter :pandoc, from: :markdown, to: :plain
  layout '/agenda.mail'

  cached_mail = @items[@item.identifier.without_ext + '.mail']
  write cached_mail ? nil : { ext: 'mail' }
end

compile '/meetings/*/index' do
  layout '/transcript.html'
  write ext: 'html'
end

compile '/meetings/*/index', rep: :mail do
  layout '/transcript.mail'
  write ext: 'mail'
end

compile '/meetings/*/audio_*.vtt', rep: :html do
  filter :vtt2transcript, output: :html
end

compile '/meetings/*/audio_*.vtt', rep: :text do
  filter :vtt2transcript, output: :markdown
  filter :pandoc, from: :markdown, to: :plain
end

compile '/**/*.html' do
  filter :erb
  layout '/default.*'
end

# This is an example rule that matches Markdown (.md) files, and filters them
# using the :kramdown filter. It is commented out by default, because kramdown
# is not bundled with Nanoc or Ruby.
#
#compile '/**/*.md' do
#  filter :kramdown
#  layout '/default.*'
#end

route '/**/*.{html,md}' do
  if item.identifier =~ '/**/index.*'
    File.join(File.dirname(item.identifier), 'index.html')
  else
    item.identifier.without_ext + '/index.html'
  end
end

compile '/**/*' do
  write item.identifier.to_s
end

layout '/**/*', :erb, trim_mode: '<>'
